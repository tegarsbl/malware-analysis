from flask import Flask, request, render_template
from androguard.core.bytecodes import apk
from androguard.core.analysis import analysis
from androguard.core.bytecodes import dvm
import os

app = Flask(__name__)

def analyze_apk(file_path):
    # Load APK
    a = apk.APK(file_path)
    data = {
        "package_name": a.get_package(),
        "version_code": a.get_androidversion_code(),
        "version_name": a.get_androidversion_name(),
        "permissions": a.get_permissions(),
        "activities": a.get_activities(),
        "services": a.get_services(),
        "receivers": a.get_receivers(),
        "providers": a.get_providers()
    }
    
    # Analyze APK
    dx = dvm.DalvikVMFormat(a.get_dex())
    analysis_result = analysis.Analysis(dx)
    
    # Extracting the entry points and methods
    methods = [str(method) for method in analysis_result.get_methods()]
    data["methods"] = methods
    
    return data

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        if 'file' not in request.files:
            return render_template('index.html', error="No file part")
        
        file = request.files['file']
        if file.filename == '':
            return render_template('index.html', error="No selected file")
        
        if file:
            file_path = os.path.join('uploads', file.filename)
            file.save(file_path)
            analysis_result = analyze_apk(file_path)
            os.remove(file_path)
            return render_template('result.html', data=analysis_result)
    
    return render_template('index.html')

if __name__ == '__main__':
    if not os.path.exists('uploads'):
        os.makedirs('uploads')
    app.run(debug=True)
